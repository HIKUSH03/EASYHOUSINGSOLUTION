@model EHSDataAccessLayer.Entity.Property

@{
    ViewBag.Title = "AddProperty";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Property</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Property Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.PropertyName)
            @Html.EditorFor(model => model.PropertyName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PropertyType)
            @Html.EditorFor(model => model.PropertyType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PropertyType, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PropertyOption)
            @Html.EditorFor(model => model.PropertyOption, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PropertyOption, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description)
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address)
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriceRange)
            @Html.EditorFor(model => model.PriceRange, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PriceRange, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InitialDeposit)
            @Html.EditorFor(model => model.InitialDeposit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InitialDeposit, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Landmark)
            @Html.EditorFor(model => model.Landmark, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Landmark, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="button-container">
                <input type="submit" value="Create" class="btn-default" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn-default btn-cancel" })
            </div>
        </div>
    </div>
}
<div class="text-center">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn-default btn-link" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    /* Base styles */
    body {
        background-color: #121212;
        color: #ffffff;
        font-family: 'Poppins', sans-serif;
        margin: 0;
        padding: 0;
    }

    h2 {
        text-align: center;
        font-weight: 600;
        margin-bottom: 20px;
    }

    .form-horizontal {
        width: 80%;
        margin: 0 auto;
        background-color: #1e1e1e;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        font-weight: 600;
        margin-bottom: 5px;
        display: block;
    }

    input[type=text],
    input[type=number],
    textarea,
    select {
        padding: 10px;
        margin-bottom: 5px;
        border: 1px solid #333;
        background-color: #2e2e2e;
        color: #ffffff;
        border-radius: 4px;
        width: 100%;
        box-sizing: border-box;
    }

    input[type=checkbox] {
        margin-right: 10px;
    }

    .btn-default {
        padding: 10px 15px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 600;
        font-size: 16px;
        margin-right: 10px;
    }

        .btn-default:hover {
            background-color: #0056b3;
        }

    .btn-cancel {
        background-color: #6c757d;
    }

        .btn-cancel:hover {
            background-color: #5a6268;
        }

    .btn-link {
        text-decoration: none;
        margin-top: 15px;
        display: inline-block;
    }

    .text-danger {
        color: #ff4d4d;
        font-size: 12px;
    }

    .form-group:last-of-type {
        text-align: center;
    }

    .button-container {
        text-align: center;
    }

    a {
        color: #007bff;
        text-decoration: none;
    }

        a:hover {
            text-decoration: none;
        }
</style>
