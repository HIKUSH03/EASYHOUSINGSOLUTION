<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Property</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        /* Base styles */
        body {
            background-color: #121212;
            color: #ffffff;
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
        }

        h1 {
            text-align: center;
        }

        form {
            display: flex;
            flex-direction: column;
        }

        label {
            margin-bottom: 5px;
        }

        input[type=text],
        input[type=number],
        textarea,
        select {
            padding: 10px;
            margin-bottom: 15px;
            border: none;
            border-radius: 4px;
        }

        button {
            padding: 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            button:hover {
                background-color: #0056b3;
            }
    </style>
</head>
<body>
    <div>
        <h1>Edit Property</h1>
        <form id="propertyForm">
            <label for="propertyName">Property Name:</label>
            <input type="text" id="propertyName" name="propertyName" required>

            <label for="propertyType">Property Type:</label>
            <input type="text" id="propertyType" name="propertyType" required>

            <label for="propertyOption">Property Option:</label>
            <input type="text" id="propertyOption" name="propertyOption" required>

            <label for="description">Description:</label>
            <textarea id="description" name="description" required></textarea>

            <label for="address">Address:</label>
            <textarea id="address" name="address" required></textarea>

            <label for="priceRange">Price Range:</label>
            <input type="number" id="priceRange" name="priceRange" required>

            <label for="initialDeposit">Initial Deposit:</label>
            <input type="number" id="initialDeposit" name="initialDeposit" required>

            <label for="landmark">Landmark:</label>
            <input type="text" id="landmark" name="landmark">

            <label for="isActive">Is Active:</label>
            <select id="isActive" name="isActive">
                <option value="true">Yes</option>
                <option value="false">No</option>
            </select>

            <label for="sellerId">Seller ID:</label>
            <input type="number" id="sellerId" name="sellerId" required>

            <button type="submit">Update</button>
        </form>
    </div>

    <script>
        // Mock existing property data
        const existingPropertyData = {
            propertyName: "Luxury Villa",
            propertyType: "Residential",
            propertyOption: "For Sale",
            description: "A beautiful luxury villa with a pool.",
            address: "123 Luxury St, Beverly Hills, CA",
            priceRange: 1500000,
            initialDeposit: 300000,
            landmark: "Near Central Park",
            isActive: true,
            sellerId: 42
        };

        // Populate the form with existing data
        document.getElementById('propertyName').value = existingPropertyData.propertyName;
        document.getElementById('propertyType').value = existingPropertyData.propertyType;
        document.getElementById('propertyOption').value = existingPropertyData.propertyOption;
        document.getElementById('description').value = existingPropertyData.description;
        document.getElementById('address').value = existingPropertyData.address;
        document.getElementById('priceRange').value = existingPropertyData.priceRange;
        document.getElementById('initialDeposit').value = existingPropertyData.initialDeposit;
        document.getElementById('landmark').value = existingPropertyData.landmark;
        document.getElementById('isActive').value = existingPropertyData.isActive.toString();
        document.getElementById('sellerId').value = existingPropertyData.sellerId;

        document.getElementById('propertyForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent the default form submission

            const updatedPropertyData = {
                propertyName: document.getElementById('propertyName').value,
                propertyType: document.getElementById('propertyType').value,
                propertyOption: document.getElementById('propertyOption').value,
                description: document.getElementById('description').value,
                address: document.getElementById('address').value,
                priceRange: parseFloat(document.getElementById('priceRange').value),
                initialDeposit: parseFloat(document.getElementById('initialDeposit').value),
                landmark: document.getElementById('landmark').value,
                isActive: document.getElementById('isActive').value === 'true',
                sellerId: parseInt(document.getElementById('sellerId').value),
            };

            console.log(updatedPropertyData); // You can replace this with an API call or further processing
        });
    </script>
</body>
</html>
