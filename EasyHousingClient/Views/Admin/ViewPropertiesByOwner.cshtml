@model IEnumerable<EHSDataAccessLayer.Entity.Property>

@{
    ViewBag.Title = "ViewPropertiesByOwner";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <h2 class="text-center mb-4">View Properties by Seller</h2>
        </div>
    </div>-->
<!-- Seller Search Form -->
<!--<div class="row mb-4">
    <div class="col-md-6 offset-md-3">
        @using (Html.BeginForm("ViewPropertiesByOwner", "Admin", FormMethod.Post, new { @class = "form-inline d-flex justify-content-center" }))
        {
            <div class="input-group">
                <input type="text"
                       id="sellerId"
                       name="sellerId"
                       value="@ViewBag.SellerId"
                       class="form-control"
                       placeholder="Enter Seller Id"
                       required />
                <button type="submit" class="btn btn-primary ml-2">Search</button>
            </div>
        }
    </div>
</div>-->
<!-- Validation Messages -->
<!--@if (!ViewData.ModelState.IsValid)
{
    <div class="row mb-4">
        <div class="col-md-12">
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger text-center" })
        </div>
    </div>
}-->
<!-- Properties Table -->
<!--@if (Model != null && Model.Any())
    {
        <div class="row">
            <div class="col-md-12">
                <h4 class="text-center">Properties for Seller: @ViewBag.SellerId</h4>
                <table class="table table-striped table-bordered mt-3">
                    <thead class="thead-dark">
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Option</th>
                            <th>Description</th>
                            <th>Active</th>
                            <th>Price Range</th>
                            <th>Initial Deposit</th>
                            <th>Landmark</th>
                            <th>Address</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var property in Model)
                        {
                            <tr>
                                <td>@property.PropertyId</td>
                                <td>@property.PropertyName</td>
                                <td>@property.PropertyType</td>
                                <td>@property.PropertyOption</td>
                                <td>@property.Description</td>
                                <td>@(property.IsActive ? "Yes" : "No")</td>
                                <td>@property.PriceRange</td>
                                <td>@property.InitialDeposit</td>
                                <td>@property.Landmark</td>
                                <td>@property.Address</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div>
                <img src="~/Content/Images/d6.jpg" alt="Decorative" />
            </div>
        </div>
    }
    else if (Model != null && !Model.Any())
    {
        <div class="row">
            <div class="col-md-12">
                <p class="alert alert-info text-center">No properties found for the entered seller ID.</p>
            </div>
        </div>
    }
</div>-->

<style>
    /* Base styles */
    .cart-icon-container {
        position: fixed;
        top: 100px; /* Position it below the navbar */
        right: 20px;
        z-index: 999;
        background-color: #4CAF50;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        transition: transform 0.2s, background-color 0.2s;
    }

        .cart-icon-container:hover {
            transform: scale(1.1);
            background-color: #45a049;
        }

    .cart-icon {
        color: white;
        font-size: 24px;
    }

    .cart-badge {
        position: absolute;
        top: -5px;
        right: -5px;
        background-color: #ff4444;
        color: white;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
        font-weight: bold;
    }

    body {
        background-color: #121212;
        color: #ffffff;
        font-family: 'Poppins', sans-serif;
        margin: 0;
        padding: 0;
    }

    .search-container {
        max-width: 1200px;
        margin: 3rem auto;
        padding: 0 1rem;
    }

    /* Search form styles */
    .search-form {
        background-color: #1e1e1e;
        padding: 2rem;
        border-radius: 10px;
        text-align: center;
        margin-bottom: 2rem;
    }

    .region-search-btn {
        background-color: #2d2d2d;
        color: white;
        padding: 1rem 2rem;
        border: 1px solid #333;
        border-radius: 5px;
        cursor: pointer;
        font-family: 'Poppins', sans-serif;
        font-size: 1rem;
        transition: background-color 0.3s;
    }

        .region-search-btn:hover {
            background-color: #383838;
        }

    /* Filter styles */
    .filters {
        display: flex;
        justify-content: flex-end;
        margin: 1rem 0;
        gap: 1rem;
    }

    .sort-button {
        padding: 0.75rem 1.5rem;
        border: 1px solid #333;
        background-color: #2d2d2d;
        color: #ffffff;
        border-radius: 5px;
        cursor: pointer;
        font-family: 'Poppins', sans-serif;
        transition: background-color 0.3s;
    }

        .sort-button:hover {
            background-color: #383838;
        }

        .sort-button.active {
            background-color: #1e1e1e;
            border-color: #4CAF50;
        }

    /* Property grid styles */
    .property-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 2rem;
        margin-top: 2rem;
    }

    /* Property card styles */
    .property-card {
        background-color: #1e1e1e;
        border-radius: 10px;
        overflow: hidden;
        transition: transform 0.3s;
        display: flex;
        flex-direction: column;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

        .property-card:hover {
            transform: translateY(-5px);
        }

    .property-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .property-info {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        min-height: 200px;
    }

    .property-price {
        font-size: 1.5rem;
        font-weight: 600;
        color: #4CAF50;
        margin-bottom: 0.5rem;
    }

    .property-name {
        font-size: 1.2rem;
        font-weight: 500;
        margin: 0.5rem 0;
        line-height: 1.4;
    }

    .property-location {
        color: #999;
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .property-type {
        display: inline-block;
        background-color: #2d2d2d;
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.875rem;
        color: #ccc;
        margin-top: 0.5rem;
        margin-bottom: 1rem;
    }

    .button-group {
        display: flex;
        gap: 0.5rem;
        margin-top: auto;
        padding-top: 1rem;
    }

    .details-button, .cart-button {
        flex: 1;
        padding: 0.75rem 1rem;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .details-button {
        background-color: #007bff;
        color: white;
        text-decoration: none;
    }

        .details-button:hover {
            background-color: #0056b3;
            text-decoration: none;
        }

    .cart-button {
        background-color: #4CAF50;
        color: white;
    }

        .cart-button:hover {
            background-color: #45a049;
        }


    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        z-index: 1000;
    }

    .modal-content {
        background-color: #1e1e1e;
        margin: 5% auto;
        padding: 2rem;
        border-radius: 10px;
        max-width: 800px;
        position: relative;
        max-height: 90vh;
        overflow-y: auto;
    }

    .close-modal {
        position: absolute;
        right: 1rem;
        top: 1rem;
        font-size: 2rem;
        cursor: pointer;
        color: #999;
    }

        .close-modal:hover {
            color: #fff;
        }

    /* Property details styles */
    .property-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
    }

    .detail-image {
        width: 100%;
        border-radius: 8px;
    }

    .detail-info {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .detail-item {
        display: grid;
        grid-template-columns: 120px 1fr;
        gap: 1rem;
    }

    .detail-label {
        color: #999;
        font-size: 0.9rem;
    }

    .detail-value {
        color: #fff;
    }

    /* Responsive design */
    @*@media (max-width: 768px) {
        .property-details {
            grid-template-columns: 1fr;
        }
    }*@
</style>

<div class="search-container">
    <div class="search-form">
        <h2>Search Properties by Seller</h2>

        <form asp-action="ViewPropertiesByOwner" method="post" class="form-inline d-flex justify-content-center">
            <div class="input-group">
                <input type="text"
                       id="sellerId"
                       name="sellerId"
                       value="@ViewBag.SellerId"
                       class="form-control"
                       placeholder="Enter Seller ID"
                       required />
                <button type="submit" class="region-search-btn ml-2">Search</button>
            </div>
        </form>

        @Html.ActionLink("View All Properties", "Index", "Admin", new { @class = "btn btn-outline-primary" })
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="property-grid">
            @foreach (var property in Model)
            {
                <div class="property-card">
                    <img src="https://placehold.co/300x200.png" alt="@property.PropertyName" class="property-image" />
                    <div class="property-info">
                        <div class="property-price">$@property.PriceRange.ToString("N0")</div>
                        <h3 class="property-name">@property.PropertyName</h3>
                        <div class="property-location">📍 @property.Address</div>
                        <div class="property-type">@property.PropertyType</div>
                        <div class="button-group">
                            @Html.ActionLink("Details", "Details", new { id = property.PropertyId }, new { @class = "details-button" })
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else if (Model != null && !Model.Any())
    {
        <div class="search-form">
            <p class="text-center">No properties found for the entered seller ID.</p>
        </div>
    }
</div>