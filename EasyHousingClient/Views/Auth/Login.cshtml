@model EasyHousingClient.Models.LoginViewModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        margin: 0;
        padding: 0;
        overflow: hidden;
        background: url('@Url.Content("~/Content/images/image1.jpg")') no-repeat center center fixed;
        background-size: cover;
    }

    .slideshow-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        position: relative;
        background: rgba(255, 255, 255, 0.95);
        width: 90%;
        max-width: 400px;
        margin: 100px auto;
        padding: 40px;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        transform: scale(1);
        opacity: 1;
    }

    h2 {
        color: #333;
        font-family: 'Prata', serif;
        text-align: center;
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-group input {
        width: 100%;
        padding: 12px;
        border: 1px solid rgba(0, 0, 0, 0.1);
        border-radius: 4px;
        font-size: 16px;
        transition: border-color 0.3s ease;
    }

    .form-group input:focus {
        outline: none;
        border-color: #333;
    }

    .submit-btn {
        width: 100%;
        padding: 12px;
        background: #333;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .submit-btn:hover {
        background: #000;
        transform: translateY(-2px);
    }
</style>

<div class="modal-content">
    <h2>Login</h2>
    @if (TempData["err"] != null)
            {
                <div>@TempData["err"]</div>
            }

    @using (Html.BeginForm("Login", "Auth", FormMethod.Post, new { @class = "modal-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", placeholder = "Email" })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Password" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <button type="submit" class="submit-btn">Login</button>
        </div>
    }

    <div style="text-align:center; margin-top:10px;">
        @Html.ActionLink("Back to Home", "Index", "Home", null, new { @style = "color: #333; text-decoration: none;" })
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
