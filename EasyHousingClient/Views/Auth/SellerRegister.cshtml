@model EHSWebAPI.DTOs.RegisterSellerDto

@{
    ViewBag.Title = "Seller Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Seller Registration</h2>

<style type="text/css">
    body {
        margin: 0;
        padding: 0;
        overflow: hidden;
        font-family: 'Arial', sans-serif;
    }

    .slideshow-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        overflow: hidden;
    }

    .slide {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        transition: opacity 1s ease-in-out;
        background-size: cover;
        background-position: center;
        -webkit-animation: zoomEffect 20s infinite;
        animation: zoomEffect 20s infinite;
    }

        .slide::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(rgba(18, 18, 18, 0.3), rgba(18, 18, 18, 0.5));
        }

        .slide.active {
            opacity: 1;
        }

    .modal {
        display: flex;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        z-index: 1000;
    }

    .modal-content {
        background: rgba(255, 255, 255, 0.95);
        width: 90%;
        max-width: 500px;
        margin: auto;
        padding: 40px;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        transform: scale(1);
        opacity: 1;
    }

    .close-btn {
        position: absolute;
        right: 20px;
        top: 15px;
        font-size: 28px;
        font-weight: bold;
        color: #333;
        cursor: pointer;
    }

        .close-btn:hover {
            color: #000;
        }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group input, .form-group select {
            width: 100%;
            padding: 12px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            border-radius: 4px;
            font-size: 16px;
        }

    .submit-btn {
        width: 100%;
        padding: 12px;
        background: #333;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .submit-btn:hover {
            background: #000;
        }

    h2 {
        margin-bottom: 30px;
        text-align: center;
        color: #333;
    }
</style>

<div class="slideshow-container">
    <div class="slide active" style="background-image: url('@Url.Content("~/Content/images/image1.jpg")')"></div>
    <div class="slide" style="background-image: url('@Url.Content("~/Content/images/image2.jpg")')"></div>
    <div class="slide" style="background-image: url('@Url.Content("~/Content/images/image3.jpg")')"></div>
    <div class="slide" style="background-image: url('@Url.Content("~/Content/images/image4.jpg")')"></div>
</div>

<div class="modal">
    <div class="modal-content">
        <span class="close-btn" onclick="window.location.href='/Home/Index'">&times;</span>
        <h2>Seller Registration</h2>

        @using (Html.BeginForm("SellerRegister", "Auth", FormMethod.Post, new { @class = "modal-form" }))
        {
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName)
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.LastName)
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.UserName)
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "Username" })
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.DateOfBirth)
                @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNo)
                @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control", placeholder = "Phone Number" })
                @Html.ValidationMessageFor(m => m.PhoneNo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.EmailId)
                @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control", placeholder = "Email Address" })
                @Html.ValidationMessageFor(m => m.EmailId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.Label("State")
                @Html.DropDownListFor(m => m.StateId, new SelectList(new[]
                {
                    new { Value = 1, Text = "California" },
                    new { Value = 2, Text = "New York" },
                    new { Value = 3, Text = "Texas" },
                    new { Value = 4, Text = "Florida" }
                }, "Value", "Text"), "Select State", new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CityId)
                @Html.TextBoxFor(m => m.CityId, new { @class = "form-control", placeholder = "City" })
                @Html.ValidationMessageFor(m => m.CityId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Address)
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "Address" })
                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="submit-btn">Register</button>
        }
    </div>
</div>

@section Scripts {
    <script>
        let currentSlideIndex = 0;
        const slides = document.querySelectorAll('.slide');

        function showSlide(index) {
            slides.forEach(slide => slide.classList.remove('active'));
            slides[index].classList.add('active');
        }

        function nextSlide() {
            currentSlideIndex = (currentSlideIndex + 1) % slides.length;
            showSlide(currentSlideIndex);
        }

        setInterval(nextSlide, 5000);
        showSlide(currentSlideIndex);
    </script>
}